% Luke Buschmann
% Computer Simulation Lab
% Professor Vaziri
% Synthesizer Project
% 36 Keys

function synthesizer_project

clc
close all
clear all


%% Create main figure

resolution = get(0,'ScreenSize');
hFigure=figure(...
    'Units','Pixels',...
    'Position',[10 resolution(4)/5 resolution(3)-20 resolution(4)/2],...
    'Color',[.3 .3 .3],...
    'MenuBar','none',...
    'Toolbar','none',...
    'NumberTitle','off',...
    'Name','Synthesizer');

%% Instantiate plot figure and axes

plotFigure = 0;
plotAxes = 0;
fftbutton = 0;

%% Create panel for keys to sit on

keyboardpanel = uipanel(...
      'BackgroundColor',[0 0 0],...
      'Parent',hFigure,...
      'Clipping','Off',...
      'Units','Pixels',...      
      'Position',[0 0 resolution(3)-20 resolution(4)/3.85],...
      'FontSize',12);

%% Create sliders, buttons, menus

TEXTBGCOLOR = [.3 .3 .3];
TEXTCOLOR = [.6 .4 .6];

volumeslider = uicontrol(...
    'Style','slider',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[ resolution(3)/40 resolution(4)/3.65 resolution(3)/32 resolution(4)/5.5],...
    'String','Volume',...
    'TooltipString','Volume Control Slider',...
    'SliderStep',[.05 .2],...
    'Min',0,...
    'Max',2,...
    'Value',.75,...
    'ForegroundColor',[.2 .2 .2],...
    'BackgroundColor',[1 1 1]);

volumetext = uicontrol(...
    'Style','text',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[resolution(3)*3/320 resolution(4)*475/1024 resolution(3)/16 resolution(4)/45],...
    'FontSize',16,...
    'FontWeight','demi',...
    'ForegroundColor',TEXTCOLOR,...
    'BackgroundColor',TEXTBGCOLOR,...
    'String','Volume');


for i = 1:7
    fconstant(i) = uicontrol(...
        'Style','slider',...
        'Parent',hFigure,...
        'Units','Pixels',...
        'Position',[ resolution(3)/1.55+54*i resolution(4)/3.65 resolution(3)/32 resolution(4)/5.5],...
        'String',['Fourier Constant',num2str(i)],...
        'TooltipString',['Fourier Constant, c',num2str(i)],...
        'SliderStep',[.05 .2],...
        'Min',0,...
        'Max',1,...
        'Value',rand,...
        'ForegroundColor',[.3 .3 .3],...
        'BackgroundColor',[1 1 1]);
end

fouriertext = uicontrol(...
    'Style','text',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[resolution(3)/1.3 resolution(4)*490/1024 resolution(3)/7 resolution(4)/46],...
    'FontSize',16,...
    'FontWeight','demi',...
    'ForegroundColor',TEXTCOLOR,...
    'BackgroundColor',TEXTBGCOLOR,...
    'String','Fourier Constants');

for i = 1:7
    fourierctext(i) = uicontrol(...
        'Style','text',...
        'Parent',hFigure,...
        'Units','Pixels',...
        'Position',[resolution(3)/1.53+54*i resolution(4)*470/1024 20 14],...
        'FontSize',10,...
        'FontWeight','demi',...
        'ForegroundColor',TEXTCOLOR,...
        'BackgroundColor',TEXTBGCOLOR,...
        'String',['c',num2str(i)]);
end

presetmenu = uicontrol(...
    'Style','listbox',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'FontSize',13,...
    'Position',[ resolution(3)/1.68 resolution(4)/3.2 resolution(3)/14 resolution(4)/6.5],...
    'String',['Default'; 'Random '; 'Piano  '; 'Violin '; 'Guitar '],...
    'TooltipString','Preset Selecter',...
    'ForegroundColor',[.2 .2 .2],...
    'BackgroundColor',[1 1 1]);

presettext = uicontrol(...
    'Style','text',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[ resolution(3)/1.7 resolution(4)*485/1024 resolution(3)/12 resolution(4)/46],...
    'FontSize',15,...
    'FontWeight','demi',...
    'ForegroundColor',TEXTCOLOR,...
    'BackgroundColor',TEXTBGCOLOR,...
    'String','Presets');
    

presetbutton = uicontrol(...
    'Style','pushbutton',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[ resolution(3)/1.68 resolution(4)/3.7 resolution(3)/14 resolution(4)/28],...
    'String','Select Preset',...
    'TooltipString','Click to Select Preset',...
    'Callback',@preset_callback,...
    'ForegroundColor',[.2 .2 .2],...
    'BackgroundColor',[1 1 1]);


releaseslider = uicontrol(...
    'Style','slider',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[ resolution(3)/1.85 resolution(4)/3.65 resolution(3)/28 resolution(4)/5.5],...
    'String','Release',...
    'TooltipString','Release Control Slider',...
    'SliderStep',[.05 .2],...
    'Min',.1,...
    'Max',1.2,...
    'Value',1,...
    'ForegroundColor',[.2 .2 .2],...
    'BackgroundColor',[1 1 1]);

releasetext = uicontrol(...
    'Style','text',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[resolution(3)/1.89 resolution(4)*475/1024 resolution(3)/16 resolution(4)/46],...
    'FontSize',15,...
    'FontWeight','demi',...
    'ForegroundColor',TEXTCOLOR,...
    'BackgroundColor',TEXTBGCOLOR,...
    'String','Release');

sustainslider = uicontrol(...
    'Style','slider',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[ resolution(3)/2.07 resolution(4)/3.65 resolution(3)/28 resolution(4)/5.5],...
    'String','Sustain',...
    'TooltipString','Sustain Control Slider',...
    'SliderStep',[.05 .2],...
    'Min',.1,...
    'Max',2,...
    'Value',1.8,...
    'ForegroundColor',[.2 .2 .2],...
    'BackgroundColor',[1 1 1]);

sustaintext = uicontrol(...
    'Style','text',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[resolution(3)/2.12 resolution(4)*475/1024 resolution(3)/18 resolution(4)/46],...
    'FontSize',15,...
    'FontWeight','demi',...
    'ForegroundColor',TEXTCOLOR,...
    'BackgroundColor',TEXTBGCOLOR,...
    'String','Sustain');

attackslider = uicontrol(...
    'Style','slider',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[ resolution(3)/2.35 resolution(4)/3.65 resolution(3)/28 resolution(4)/5.5],...
    'String','Delay',...
    'TooltipString','Attack Control Slider',...
    'SliderStep',[.05 .2],...
    'Min',.02,...
    'Max',.8,...
    'Value',.1,...
    'ForegroundColor',[.2 .2 .2],...
    'BackgroundColor',[1 1 1]);

attacktext = uicontrol(...
    'Style','text',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[resolution(3)/2.41 resolution(4)*475/1024 resolution(3)/18 resolution(4)/46],...
    'FontSize',15,...
    'FontWeight','demi',...
    'ForegroundColor',TEXTCOLOR,...
    'BackgroundColor',TEXTBGCOLOR,...
    'String','Attack');

reverbslider = uicontrol(...
    'Style','slider',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[ resolution(3)/3.2 resolution(4)/3.65 resolution(3)/28 resolution(4)/5.5],...
    'String','Delay',...
    'TooltipString','Reverb Control Slider',...
    'SliderStep',[.05 .2],...
    'Min',0,...
    'Max',1,...
    'Value',.4,...
    'ForegroundColor',[.2 .2 .2],...
    'BackgroundColor',[1 1 1]);

reverbtext = uicontrol(...
    'Style','text',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[resolution(3)/3.38 resolution(4)*475/1024 resolution(3)/14 resolution(4)/46],...
    'FontSize',15,...
    'FontWeight','demi',...
    'ForegroundColor',TEXTCOLOR,...
    'BackgroundColor',TEXTBGCOLOR,...
    'String','Reverb');

durationslider = uicontrol(...
    'Style','slider',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[ resolution(3)/3.9 resolution(4)/3.65 resolution(3)/28 resolution(4)/5.5],...
    'String','Duration',...
    'TooltipString','Duration Control Slider',...
    'SliderStep',[.05 .2],...
    'Min',0,...
    'Max',1.5,...
    'Value',.25,...
    'ForegroundColor',[.2 .2 .2],...
    'BackgroundColor',[1 1 1]);

durationtext = uicontrol(...
    'Style','text',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[resolution(3)/4.16 resolution(4)*475/1024 resolution(3)/16 resolution(4)/44],...
    'FontSize',15,...
    'FontWeight','demi',...
    'ForegroundColor',TEXTCOLOR,...
    'BackgroundColor',TEXTBGCOLOR,...
    'String','Duration');

delayslider = uicontrol(...
    'Style','slider',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[ resolution(3)/2.71 resolution(4)/3.65 resolution(3)/28 resolution(4)/5.5],...
    'String','Delay',...
    'TooltipString','Delay Control Slider',...
    'SliderStep',[.05 .2],...
    'Min',0,...
    'Max',.4,...
    'Value',.05,...
    'ForegroundColor',[.2 .2 .2],...
    'BackgroundColor',[1 1 1]);

delaytext = uicontrol(...
    'Style','text',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[resolution(3)/2.79 resolution(4)*475/1024 resolution(3)/18 resolution(4)/46],...
    'FontSize',15,...
    'FontWeight','demi',...
    'ForegroundColor',TEXTCOLOR,...
    'BackgroundColor',TEXTBGCOLOR,...
    'String','Delay');

waveformmenu = uicontrol(...
    'Style','listbox',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'FontSize',13,...
    'Position',[ resolution(3)/6.3 resolution(4)/3 resolution(3)/13 resolution(4)/10],...
    'String',['Sine    '; 'Triangle'; 'Sawtooth'; 'Square  '],...
    'TooltipString','Waveform Selecter',...
    'ForegroundColor',[.2 .2 .2],...
    'BackgroundColor',[1 1 1]);

waveformtext = uicontrol(...
    'Style','text',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Position',[resolution(3)/6.25 resolution(4)*475/1024 resolution(3)/14 resolution(4)/46],...
    'FontSize',15,...
    'FontWeight','demi',...
    'ForegroundColor',TEXTCOLOR,...
    'BackgroundColor',TEXTBGCOLOR,...
    'String','Waveform');

reverbbutton = uicontrol(...
    'Style','togglebutton',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Max',1,...
    'Min',0,...
    'Value',0,...
    'Position',[ resolution(3)/13 resolution(4)/3.6 resolution(3)/14 resolution(4)/20],...
    'String',['Reverb is Off'],...
    'TooltipString','Click to toggle reverb on and off',...
    'Callback',@reverb_callback,...
    'ForegroundColor',[.2 .2 .2],...
    'BackgroundColor',[1 1 1]);

envelopebutton = uicontrol(...
    'Style','togglebutton',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'FontSize',9,...
    'Max',1,...
    'Min',0,...
    'Value',1,...
    'Position',[ resolution(3)/13 resolution(4)/2.93 resolution(3)/14 resolution(4)/20],...
    'String',['Envelope is On'],...
    'TooltipString','Click to toggle the envelope on and off',...
    'Callback',@envelope_callback,...
    'ForegroundColor',[.2 .2 .2],...
    'BackgroundColor',[1 1 1]);

plotbutton = uicontrol(...
    'Style','togglebutton',...
    'Parent',hFigure,...
    'Units','Pixels',...
    'Max',1,...
    'Min',0,...
    'Value',0,...
    'Position',[ resolution(3)/13 resolution(4)/2.5 resolution(3)/14 resolution(4)/20],...
    'String',['Plot is Off'],...
    'TooltipString','Click to toggle the plot on and off',...
    'Callback',@plot_callback,...
    'ForegroundColor',[.2 .2 .2],...
    'BackgroundColor',[1 1 1]);


%% Create Keys

w1 = (resolution(3)-45)/21;       % width of each white key
h1 = resolution(4)/5;             % height of each white key
w2 = 8/15.*w1;                    % width of each black key
h2 = 2/3.*h1;                     % height of each black key

% White keys

for i = 1:21
    key(i) = uicontrol(...
        'Style','pushbutton',...
        'Parent',keyboardpanel,...
        'Units','Pixels',...
        'Position',[ 15+(w1*(i-1)) 15 w1 h1],...
        'String',i,...
        'Callback',@keyPress_callback,...
        'ForegroundColor',[1 1 1],...
        'BackgroundColor',[1 1 1]);
end

% Black keys

for i = 22:41
    if (i ~= 24) && (i ~= 28) && (i ~= 31) && (i ~= 35) && (i ~= 38)
     key(i) = uicontrol(...
        'Style','pushbutton',...
        'Parent',keyboardpanel,...
        'Units','Pixels',...
        'Position',[ 15+(w1)*3/4+(w1*(i-22)) 15-h2+h1 w2 h2],...
        'Callback',@keyPress_callback,...
        'String',i,...
        'ForegroundColor',[0 0 0],...
        'BackgroundColor',[0 0 0]);
    end
end

% Main callback function (Key press)

function keyPress_callback(hObject,eventdata)
        fs = 44100;  % sampling frequency
        fs2 = 22050; % alternate sampling frequency
        fs3 = 11025; % another sampling frequency
        VOLUME = get(volumeslider,'Value')^2;
        REVERB = get(reverbslider,'Value');
        DELAY = get(delayslider,'Value');
        DURATION = get(durationslider,'Value');
        ATTACK = get(attackslider,'Value');
        SUSTAIN = get(sustainslider,'Value');
        RELEASE = get(releaseslider,'Value');
        WAVEFORM = get(waveformmenu,'Value');
        ENVENABLE = get(envelopebutton,'Value');
        REVERBENABLE = get(reverbbutton,'Value');
        PLOTENABLE = get(plotbutton,'Value');
        c1 = get(fconstant(1),'Value');
        c2 = get(fconstant(2),'Value');
        c3 = get(fconstant(3),'Value');
        c4 = get(fconstant(4),'Value');
        c5 = get(fconstant(5),'Value');
        c6 = get(fconstant(6),'Value');
        c7 = get(fconstant(7),'Value');
        fconst = [ c1 c2 c3 c4 c5 c6 c7 ];
        KEY = get(hObject, 'String');
     %  disp(['Pressed key # ',num2str(KEY)]);  
        freq = 0;
        switch KEY
            case '1'  % C3
                freq = 130.813;
            case '22' % C#3
                freq = 138.591;
            case '2'  % D3
                freq = 146.832;
            case '23' % D#3
                freq = 155.563;
            case '3'  % E3
                freq = 164.814;
            case '4'  % F3
                freq = 174.614;
            case '25' % F#3
                freq = 184.997;
            case '5'  % G3
                freq = 195.998;
            case '26' % G#3
                freq = 207.652;
            case '6'  % A3
                freq = 220.00;
            case '27' % A#3
                freq = 233.082;
            case '7'  % B3
                freq = 246.942;
            case '8'  % C4
                freq = 261.626;
            case '29' % C#4
                freq = 277.183;
            case '9'  % D4
                freq = 293.665;
            case '30' % D#4
                freq = 311.127;
            case '10' % E4
                freq = 329.628;
            case '11' % F4
                freq = 349.228;
            case '32' % F#4
                freq = 369.994;
            case '12' % G4
                freq = 391.995;
            case '33' % G#4
                freq = 415.305;
            case '13' % A4  (A440)
                freq = 440;
            case '34' % A#4
                freq = 466.164;
            case '14' % B4
                freq = 493.883;
            case '15' % C5
                freq = 523.251;
            case '36' % C#5
                freq = 554.365;
            case '16' % D5
                freq = 587.33;
            case '37' % D#5
                freq = 622.254;
            case '17' % E5
                freq = 659.255;
            case '18' % F5
                freq = 698.456;
            case '39' % F#5
                freq = 739.989;
            case '19' % G5
                freq = 783.991;
            case '40' % G#5
                freq = 830.609;
            case '20' % A5
                freq = 880;
            case '41' % A#5
                freq = 932.328;
            case '21' % B5
                freq = 987.767;
        end

        SOUND = 0;
        n = [0:fs*DURATION]';
        t = linspace(0,DURATION,floor(fs*DURATION));
        
        switch WAVEFORM
            
            case 1  % Sine wave
                for i=1:7 
                    SOUND = SOUND + VOLUME*(fconst(i)*cos(2*pi*i*freq*t)) ;
                end 
            case 2  % Triangle wave
                for i=1:7
                    SOUND = SOUND + VOLUME*fconst(i)*sawtooth(2*pi*freq*i*t, 0.5);
                end
            case 3  % Sawtooth wave
                for i=1:7
                    SOUND = SOUND + VOLUME*fconst(i)*sawtooth(2*pi*freq*i*t);
                end
            case 4  % Square wave
                for i=1:7
                    SOUND = SOUND + VOLUME*fconst(i)*square(2*pi*freq*i*t);
                end
        end

        
        if REVERBENABLE == 1
            SOUND = rev(SOUND, REVERB, DELAY);
        else
            pause(DELAY);
        end

        if ENVENABLE == 1
            ENVELOPE = asr_env(ATTACK, SUSTAIN, RELEASE, DURATION, fs);
            x = [length(ENVELOPE) length(SOUND)];
            SOUND = ENVELOPE .* SOUND;
       %    SOUND = SOUND ./ max(abs(SOUND));   % Normalize
        end
        
        if PLOTENABLE == 1
            domain = get(fftbutton,'Value');
            if domain == 0
                plot(plotAxes,SOUND);
                xlabel(plotAxes,'Time (samples)');
                ylabel(plotAxes,'Amplitude');
            else
                plot(plotAxes,fftshift(abs(fft(SOUND))));
                xlabel(plotAxes,'Frequency');
                ylabel(plotAxes,'Amplitude');
            end
        end
        
        sound(SOUND,fs);
        
end

% Reverb toggle callback function

function reverb_callback(hObject,eventdata)
    r_e = get(reverbbutton,'Value');
    if r_e == 1
        set(reverbbutton,'String','Reverb is On');
    else
        set(reverbbutton,'String','Reverb is Off');
    end
end

% Envelope toggle callback function

function envelope_callback(hObject,eventdata)
    e_e = get(envelopebutton,'Value');
    if e_e == 1
        set(envelopebutton,'String','Envelope is On');
    else
        set(envelopebutton,'String','Envelope is Off');
    end
end

% Plot toggle callback function

function plot_callback(hObject,eventdata)
    p_e = get(plotbutton,'Value');
    if p_e == 1
        plotFigure=figure(...
         'Units','Pixels',...  
         'NumberTitle','off',...
         'Position',[resolution(3)/5 resolution(4)/2+resolution(4)/8 resolution(3)/1.5 resolution(4)/3.25],...
         'Name','Output Sound Plot');
        set(hFigure,'Position',[10 resolution(4)/16 resolution(3)-20 resolution(4)/2]);
        set(plotbutton,'String','Plot is On');
        plotAxes = axes;
        xlabel(plotAxes,'Time (samples)');
        ylabel(plotAxes,'Amplitude');
        title(plotAxes,'Output sound wave');
        axis(plotAxes,[0 44100 -5 5]);
        
        fftbutton = uicontrol(...
            'Style','togglebutton',...
            'Parent',plotFigure,...
            'Units','Pixels',...
            'Max',1,...
            'Min',0,...
            'Value',0,...
            'Position',[ resolution(3)/1.86 resolution(4)/4.5 resolution(3)/8 resolution(4)/20],...
            'String','Time Domain',...
            'TooltipString','Click to perform a fourier transform of the plot',...
            'Callback',@fft_callback,...
            'ForegroundColor',[.2 .2 .2],...
            'BackgroundColor',[1 1 1]);
    else
        close(plotFigure);
        set(plotbutton,'String','Plot is Off');
        set(hFigure,'Position',[10 resolution(4)/5 resolution(3)-20 resolution(4)/2]);
    end
end

% Time Domain / Fourier Domain toggle button callback

function fft_callback(hObject,eventdata)
    f_e = get(fftbutton,'Value');
    if f_e == 1
        set(fftbutton,'String','Fourier Domain');
    else
        set(fftbutton,'String','Time Domain');
    end
end

% Preset button callback

function preset_callback(hObject,eventdata)
    PRESET = get(presetmenu, 'Value');
    switch PRESET
        case 1  % Default preset
            set(fconstant(1),'Value', 1 );
            set(fconstant(2),'Value', 0 );
            set(fconstant(3),'Value', 0 );
            set(fconstant(4),'Value', 0 );
            set(fconstant(5),'Value', 0 );
            set(fconstant(6),'Value', 0 );
            set(fconstant(7),'Value', 0 );
        case 2  % Random preset
            set(fconstant(1),'Value', rand );
            set(fconstant(2),'Value', rand );
            set(fconstant(3),'Value', rand );
            set(fconstant(4),'Value', rand );
            set(fconstant(5),'Value', rand );
            set(fconstant(6),'Value', rand );
            set(fconstant(7),'Value', rand );
        case 3  % Piano preset
            set(fconstant(1),'Value', 0.2 );
            set(fconstant(2),'Value', 0.86 );
            set(fconstant(3),'Value', 0.1 );
            set(fconstant(4),'Value', 0 );
            set(fconstant(5),'Value', 0.63 );
            set(fconstant(6),'Value', 0.3 );
            set(fconstant(7),'Value', 0.35 );
        case 4  % Violin preset
            set(fconstant(1),'Value', 0.6 );
            set(fconstant(2),'Value', 0.7 );
            set(fconstant(3),'Value', 0.16 );
            set(fconstant(4),'Value', 0.6 );
            set(fconstant(5),'Value', 0 );
            set(fconstant(6),'Value', 0.23 );
            set(fconstant(7),'Value', 0.135 );
        case 5  % Piano preset
            set(fconstant(1),'Value', 0 );
            set(fconstant(2),'Value', 0.86 );
            set(fconstant(3),'Value', 1 );
            set(fconstant(4),'Value', 0.9 );
            set(fconstant(5),'Value', 0.4 );
            set(fconstant(6),'Value', 0 );
            set(fconstant(7),'Value', 0 );
        case 6  % Piano preset
            set(fconstant(1),'Value', 1 );
            set(fconstant(2),'Value', 0.78 );
            set(fconstant(3),'Value', 0.24 );
            set(fconstant(4),'Value', 0.7 );
            set(fconstant(5),'Value', 1 );
            set(fconstant(6),'Value', 0.3 );
            set(fconstant(7),'Value', 0.97 );
    end

end

% Reverb function

function [output]=rev(sound, gain, delay)

    output = sound;
    d = delay * 5000;

    for i = 1:3,
      b=[gain zeros(1,round(d/i)) 1];
      a=[1 zeros(1,round(d/i)) gain];
      output = filter(b, a, output);
    end

    output = sound + output;
   
end

% Envelope function

function [envout] = asr_env(attack, sustain, release, duration2, fs)
    envout = zeros(1, floor(fs*duration2));
    attack1 = attack/(attack+sustain+release)*duration2;
    sustain1 = sustain/(attack+sustain+release)*duration2;
    release1 = release/(attack+sustain+release)*duration2;
    duration = [attack1; sustain1; release1];
    duration = round(duration.*fs);
    
    % Envelope parameters (Slope, Max)
    target = [.99999; .25; 0];
    gain = [.005; .0004; .0007];
    
    % Attack phase
    start = 2;
    stop = duration(1);
    for n = start:stop
        envout(n) = target(1)*gain(1) + (1 - gain(1))*envout(n-1);
    end
    
    % Sustain phase
    start = stop + 1;
    stop = start + duration(2);
    for n = start:stop
        envout(n) = target(2)*gain(2) + (1 - gain(2))*envout(n-1);
    end
    
    % Release phase
    start = stop + 1;
    stop = floor(fs*duration2);
    for n = start:stop
        envout(n) = target(3)*gain(3) + (1 - gain(3))*envout(n-1);
    end

end

end

% Key Mapping
% i = 1  : C3
% i = 22 : C#3
% i = 2  : D3
% i = 23 : D#3
% i = 3  : E3
% i = 4  : F3
% i = 25 : F#3
% i = 5  : G3
% i = 26 : G#3
% i = 6  : A3
% i = 27 : A#3
% i = 7  : B3
% i = 8  : C4 (Middle C)
% i = 29 : C#4
% i = 9  : D4
% i = 30 : D#4
% i = 10 : E4
% i = 11 : F4
% i = 32 : F#4
% i = 12 : G4
% i = 33 : G#4
% i = 13 : A4
% i = 34 : A#4
% i = 14 : B4
% i = 15 : C5
% i = 36 : C#5
% i = 16 : D5
% i = 37 : D#5
% i = 17 : E5
% i = 18 : F5
% i = 39 : F#5
% i = 19 : G5
% i = 40 : G#5
% i = 20 : A5
% i = 41 : A#5
% i = 21 : B5
